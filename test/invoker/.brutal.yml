---
header: |
  #!/usr/bin/env ruby
  # frozen_string_literal: true

  require "simplecov"

  SimpleCov.command_name "Brutal test suite"
  SimpleCov.start

  begin
    require "./../../lib/test_tube"
  rescue LoadError
    require_relative "./../../lib/test_tube"
  end

  module Matcher
    class BeTheAnswer
      def matches?
        expected.equal?(yield)
      end

      private

      def expected
        42
      end
    end

    class RaiseException
      def initialize(expected)
        @expected = expected
      end

      def matches?(*, **)
        yield
      rescue expected => _e
        true
      else
        false
      end

      private

      attr_reader :expected
    end
  end

subject: |
  TestTube.invoke(isolate: %{isolate}, matcher: %{matcher}, negate: %{negate},
    &%{input}
  )

contexts:
  input:
    - '-> { "101010".to_i(2) }'
    - "-> { 1 / 0 }"
  isolate:
    - false
    - true
  matcher:
    - "Matcher::BeTheAnswer.new"
    - "Matcher::RaiseException.new(TypeError)"
    - "Matcher::RaiseException.new(ZeroDivisionError)"
  negate:
    - false
    - true

actuals:
  - "%{subject}.actual.class"
  - "%{subject}.error.class"
  - "%{subject}.got"
  - "%{subject}.inspect"
  - "%{subject}.to_s"
